- const getInputName = (f, property) => `${f.name}[${property}]`
  mixin formFor(f, options = {})

    form(action=_.get(options, 'url') method=_.get(options, 'method', 'get'))
      br
      block  
        
  mixin input(f, property, options = { as: 'text' })
    - const value = f.object[property] === undefined ? '' : f.object[property]
    .row.justify-content-center
      .form-group.col-sm-5(class=(f.errors[property] && 'has-danger'))
        div
          input(name=getInputName(f, property) class='form-control' size="50" type=options['as'] value=`${value}` placeholder=`${property}`)
        if f.errors[property]
          .form-control-feedback= f.errors[property].map(({ message }) => message).join('. ')

  mixin button(f, type = 'submit')
      .form-group.row.justify-content-center
          .coll
            input(class='btn btn-primary' type=`${type}` value=`âœ“ submit`)
